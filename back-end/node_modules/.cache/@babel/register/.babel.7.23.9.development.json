{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\ggeor\\\\Desktop\\\\softeng 2023\\\\softeng23-33\\\\back-end\\\\postman_scripts\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\ggeor\\\\Desktop\\\\softeng 2023\\\\softeng23-33\\\\back-end\",\"filename\":\"C:\\\\Users\\\\ggeor\\\\Desktop\\\\softeng 2023\\\\softeng23-33\\\\back-end\\\\postman_scripts\\\\admin.tests.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ggeor\\\\Desktop\\\\softeng 2023\\\\softeng23-33\\\\back-end\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.9:development":{"value":{"code":"const chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst {\n  expect\n} = chai; // Destructuring 'expect' from 'chai'\n\nconst app = require('../app');\nconst pool = require('../your-pool-module');\nconst request = require('supertest');\nchai.use(chaiHttp);\ndescribe('Test admin reset database (POST {baseurl}/admin/reset)', () => {\n  before(done => {\n    // Add any setup logic here, e.g., creating a test database or ensuring a specific state\n    done();\n  });\n  it('it should return with status 200', done => {\n    request(app).post('/admin/reset').end((err, res) => {\n      expect(res.status).to.equal(200);\n      done();\n    });\n  });\n  it('Should return message: Database reset', done => {\n    // Assuming your reset function returns a message like {\"status\": \"OK\"}\n    request(app).post('/admin/reset').end((err, res) => {\n      expect(res.body.status).to.equal('OK');\n      done();\n    });\n  });\n  after(done => {\n    // Add any cleanup logic here, e.g., restoring the database to its original state\n    done();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGFpIiwicmVxdWlyZSIsImNoYWlIdHRwIiwiZXhwZWN0IiwiYXBwIiwicG9vbCIsInJlcXVlc3QiLCJ1c2UiLCJkZXNjcmliZSIsImJlZm9yZSIsImRvbmUiLCJpdCIsInBvc3QiLCJlbmQiLCJlcnIiLCJyZXMiLCJzdGF0dXMiLCJ0byIsImVxdWFsIiwiYm9keSIsImFmdGVyIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGdnZW9yXFxEZXNrdG9wXFxzb2Z0ZW5nIDIwMjNcXHNvZnRlbmcyMy0zM1xcYmFjay1lbmRcXHBvc3RtYW5fc2NyaXB0c1xcIiwic291cmNlcyI6WyJhZG1pbi50ZXN0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjaGFpID0gcmVxdWlyZSgnY2hhaScpO1xyXG5jb25zdCBjaGFpSHR0cCA9IHJlcXVpcmUoJ2NoYWktaHR0cCcpO1xyXG5jb25zdCB7IGV4cGVjdCB9ID0gY2hhaTsgIC8vIERlc3RydWN0dXJpbmcgJ2V4cGVjdCcgZnJvbSAnY2hhaSdcclxuXHJcbmNvbnN0IGFwcCA9IHJlcXVpcmUoJy4uL2FwcCcpO1xyXG5jb25zdCBwb29sID0gcmVxdWlyZSgnLi4veW91ci1wb29sLW1vZHVsZScpO1xyXG5jb25zdCByZXF1ZXN0ID0gcmVxdWlyZSgnc3VwZXJ0ZXN0Jyk7XHJcblxyXG5jaGFpLnVzZShjaGFpSHR0cCk7XHJcblxyXG5kZXNjcmliZSgnVGVzdCBhZG1pbiByZXNldCBkYXRhYmFzZSAoUE9TVCB7YmFzZXVybH0vYWRtaW4vcmVzZXQpJywgKCkgPT4ge1xyXG4gICAgYmVmb3JlKChkb25lKSA9PiB7XHJcbiAgICAgICAgLy8gQWRkIGFueSBzZXR1cCBsb2dpYyBoZXJlLCBlLmcuLCBjcmVhdGluZyBhIHRlc3QgZGF0YWJhc2Ugb3IgZW5zdXJpbmcgYSBzcGVjaWZpYyBzdGF0ZVxyXG4gICAgICAgIGRvbmUoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGl0KCdpdCBzaG91bGQgcmV0dXJuIHdpdGggc3RhdHVzIDIwMCcsIChkb25lKSA9PiB7XHJcbiAgICAgICAgcmVxdWVzdChhcHApXHJcbiAgICAgICAgICAgIC5wb3N0KCcvYWRtaW4vcmVzZXQnKVxyXG4gICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgZXhwZWN0KHJlcy5zdGF0dXMpLnRvLmVxdWFsKDIwMCk7XHJcbiAgICAgICAgICAgICAgICBkb25lKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaXQoJ1Nob3VsZCByZXR1cm4gbWVzc2FnZTogRGF0YWJhc2UgcmVzZXQnLCAoZG9uZSkgPT4ge1xyXG4gICAgICAgIC8vIEFzc3VtaW5nIHlvdXIgcmVzZXQgZnVuY3Rpb24gcmV0dXJucyBhIG1lc3NhZ2UgbGlrZSB7XCJzdGF0dXNcIjogXCJPS1wifVxyXG4gICAgICAgIHJlcXVlc3QoYXBwKVxyXG4gICAgICAgICAgICAucG9zdCgnL2FkbWluL3Jlc2V0JylcclxuICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGV4cGVjdChyZXMuYm9keS5zdGF0dXMpLnRvLmVxdWFsKCdPSycpO1xyXG4gICAgICAgICAgICAgICAgZG9uZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGFmdGVyKChkb25lKSA9PiB7XHJcbiAgICAgICAgLy8gQWRkIGFueSBjbGVhbnVwIGxvZ2ljIGhlcmUsIGUuZy4sIHJlc3RvcmluZyB0aGUgZGF0YWJhc2UgdG8gaXRzIG9yaWdpbmFsIHN0YXRlXHJcbiAgICAgICAgZG9uZSgpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDckMsTUFBTTtFQUFFRTtBQUFPLENBQUMsR0FBR0gsSUFBSSxDQUFDLENBQUU7O0FBRTFCLE1BQU1JLEdBQUcsR0FBR0gsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUM3QixNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUMzQyxNQUFNSyxPQUFPLEdBQUdMLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFFcENELElBQUksQ0FBQ08sR0FBRyxDQUFDTCxRQUFRLENBQUM7QUFFbEJNLFFBQVEsQ0FBQyx3REFBd0QsRUFBRSxNQUFNO0VBQ3JFQyxNQUFNLENBQUVDLElBQUksSUFBSztJQUNiO0lBQ0FBLElBQUksQ0FBQyxDQUFDO0VBQ1YsQ0FBQyxDQUFDO0VBRUZDLEVBQUUsQ0FBQyxrQ0FBa0MsRUFBR0QsSUFBSSxJQUFLO0lBQzdDSixPQUFPLENBQUNGLEdBQUcsQ0FBQyxDQUNQUSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQ3BCQyxHQUFHLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7TUFDZlosTUFBTSxDQUFDWSxHQUFHLENBQUNDLE1BQU0sQ0FBQyxDQUFDQyxFQUFFLENBQUNDLEtBQUssQ0FBQyxHQUFHLENBQUM7TUFDaENSLElBQUksQ0FBQyxDQUFDO0lBQ1YsQ0FBQyxDQUFDO0VBQ1YsQ0FBQyxDQUFDO0VBRUZDLEVBQUUsQ0FBQyx1Q0FBdUMsRUFBR0QsSUFBSSxJQUFLO0lBQ2xEO0lBQ0FKLE9BQU8sQ0FBQ0YsR0FBRyxDQUFDLENBQ1BRLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FDcEJDLEdBQUcsQ0FBQyxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsS0FBSztNQUNmWixNQUFNLENBQUNZLEdBQUcsQ0FBQ0ksSUFBSSxDQUFDSCxNQUFNLENBQUMsQ0FBQ0MsRUFBRSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO01BQ3RDUixJQUFJLENBQUMsQ0FBQztJQUNWLENBQUMsQ0FBQztFQUNWLENBQUMsQ0FBQztFQUVGVSxLQUFLLENBQUVWLElBQUksSUFBSztJQUNaO0lBQ0FBLElBQUksQ0FBQyxDQUFDO0VBQ1YsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["chai","require","chaiHttp","expect","app","pool","request","use","describe","before","done","it","post","end","err","res","status","to","equal","body","after"],"sourceRoot":"C:\\Users\\ggeor\\Desktop\\softeng 2023\\softeng23-33\\back-end\\postman_scripts\\","sources":["admin.tests.js"],"sourcesContent":["const chai = require('chai');\r\nconst chaiHttp = require('chai-http');\r\nconst { expect } = chai;  // Destructuring 'expect' from 'chai'\r\n\r\nconst app = require('../app');\r\nconst pool = require('../your-pool-module');\r\nconst request = require('supertest');\r\n\r\nchai.use(chaiHttp);\r\n\r\ndescribe('Test admin reset database (POST {baseurl}/admin/reset)', () => {\r\n    before((done) => {\r\n        // Add any setup logic here, e.g., creating a test database or ensuring a specific state\r\n        done();\r\n    });\r\n\r\n    it('it should return with status 200', (done) => {\r\n        request(app)\r\n            .post('/admin/reset')\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(200);\r\n                done();\r\n            });\r\n    });\r\n\r\n    it('Should return message: Database reset', (done) => {\r\n        // Assuming your reset function returns a message like {\"status\": \"OK\"}\r\n        request(app)\r\n            .post('/admin/reset')\r\n            .end((err, res) => {\r\n                expect(res.body.status).to.equal('OK');\r\n                done();\r\n            });\r\n    });\r\n\r\n    after((done) => {\r\n        // Add any cleanup logic here, e.g., restoring the database to its original state\r\n        done();\r\n    });\r\n});\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,MAAM;EAAEE;AAAO,CAAC,GAAGH,IAAI,CAAC,CAAE;;AAE1B,MAAMI,GAAG,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAMI,IAAI,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AAC3C,MAAMK,OAAO,GAAGL,OAAO,CAAC,WAAW,CAAC;AAEpCD,IAAI,CAACO,GAAG,CAACL,QAAQ,CAAC;AAElBM,QAAQ,CAAC,wDAAwD,EAAE,MAAM;EACrEC,MAAM,CAAEC,IAAI,IAAK;IACb;IACAA,IAAI,CAAC,CAAC;EACV,CAAC,CAAC;EAEFC,EAAE,CAAC,kCAAkC,EAAGD,IAAI,IAAK;IAC7CJ,OAAO,CAACF,GAAG,CAAC,CACPQ,IAAI,CAAC,cAAc,CAAC,CACpBC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MACfZ,MAAM,CAACY,GAAG,CAACC,MAAM,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;MAChCR,IAAI,CAAC,CAAC;IACV,CAAC,CAAC;EACV,CAAC,CAAC;EAEFC,EAAE,CAAC,uCAAuC,EAAGD,IAAI,IAAK;IAClD;IACAJ,OAAO,CAACF,GAAG,CAAC,CACPQ,IAAI,CAAC,cAAc,CAAC,CACpBC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MACfZ,MAAM,CAACY,GAAG,CAACI,IAAI,CAACH,MAAM,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;MACtCR,IAAI,CAAC,CAAC;IACV,CAAC,CAAC;EACV,CAAC,CAAC;EAEFU,KAAK,CAAEV,IAAI,IAAK;IACZ;IACAA,IAAI,CAAC,CAAC;EACV,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1706781220322}}